generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model project_logs {
  project_log_id Int       @id @default(autoincrement())
  project_id     Int?
  user_id        Int?
  action         String
  wallet_address String?   @db.VarChar(42)
  timestamp      DateTime? @default(now()) @db.Timestamp(6)
  projects       projects? @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
  users          users?    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model projects {
  project_id                         Int            @id @default(autoincrement())
  title                              String
  description                        String?
  amount                             Decimal        @db.Decimal(18, 6)
  status                             String?        @default("created") @db.VarChar(20)
  client_id                          Int?
  developer_id                       Int?
  contract_address                   String?        @db.VarChar(66)
  created_at                         DateTime?      @default(now()) @db.Timestamp(6)
  project_logs                       project_logs[]
  users_projects_client_idTousers    users?         @relation("projects_client_idTousers", fields: [client_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  users_projects_developer_idTousers users?         @relation("projects_developer_idTousers", fields: [developer_id], references: [user_id], onUpdate: NoAction)
  tasks                              tasks[]
}

model tasks {
  task_id             Int       @id @default(autoincrement())
  project_id          Int?
  description         String
  completed_by_dev    Boolean?  @default(false)
  confirmed_by_client Boolean?  @default(false)
  projects            projects? @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  user_id                               Int            @id @default(autoincrement())
  wallet_adress                         String         @unique @db.VarChar(42)
  rol                                   String         @db.VarChar(20)
  created_at                            DateTime?      @default(now()) @db.Timestamp(6)
  project_logs                          project_logs[]
  projects_projects_client_idTousers    projects[]     @relation("projects_client_idTousers")
  projects_projects_developer_idTousers projects[]     @relation("projects_developer_idTousers")
}
